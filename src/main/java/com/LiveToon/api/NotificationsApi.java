/*
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.16.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.LiveToon.api;

import com.LiveToon.model.Error;
import com.LiveToon.model.NotificationsGet200Response;
import com.LiveToon.model.NotificationsIdReadPatch200Response;
import org.springframework.lang.Nullable;
import java.util.UUID;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;

import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-09-29T19:10:41.347886+09:00[Asia/Seoul]", comments = "Generator version: 7.16.0")
@Validated
@Tag(name = "Notification", description = "the Notification API")
public interface NotificationsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    public static final String PATH_NOTIFICATIONS_GET = "/notifications";
    /**
     * GET /notifications : �뚮┝/怨듭� 議고쉶
     * �ъ슜�먯쓽 �뚮┝怨� 怨듭��ы빆 紐⑸줉�� 議고쉶�⑸땲��
     *
     * @param type �뚮┝ ���� �꾪꽣 (optional)
     * @param unreadOnly �쎌� �딆� �뚮┝留� 議고쉶 (optional, default to false)
     * @param page �섏씠吏� 踰덊샇 (optional, default to 1)
     * @param limit �섏씠吏��� ��ぉ �� (optional, default to 20)
     * @return �뚮┝ 紐⑸줉 議고쉶 �깃났 (status code 200)
     *         or �몄쬆�섏� �딆� �ъ슜�� (status code 401)
     */
    @Operation(
        operationId = "notificationsGet",
        summary = "�뚮┝/怨듭� 議고쉶",
        description = "�ъ슜�먯쓽 �뚮┝怨� 怨듭��ы빆 紐⑸줉�� 議고쉶�⑸땲��",
        tags = { "Notification" },
        responses = {
            @ApiResponse(responseCode = "200", description = "�뚮┝ 紐⑸줉 議고쉶 �깃났", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = NotificationsGet200Response.class))
            }),
            @ApiResponse(responseCode = "401", description = "�몄쬆�섏� �딆� �ъ슜��", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth"),
            @SecurityRequirement(name = "BearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = NotificationsApi.PATH_NOTIFICATIONS_GET,
        produces = { "application/json" }
    )
    
    default ResponseEntity<NotificationsGet200Response> notificationsGet(
        @Parameter(name = "type", description = "�뚮┝ ���� �꾪꽣", in = ParameterIn.QUERY) @Valid @RequestParam(value = "type", required = false) @Nullable String type,
        @Parameter(name = "unread_only", description = "�쎌� �딆� �뚮┝留� 議고쉶", in = ParameterIn.QUERY) @Valid @RequestParam(value = "unread_only", required = false, defaultValue = "false") Boolean unreadOnly,
        @Min(1) @Parameter(name = "page", description = "�섏씠吏� 踰덊샇", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page", required = false, defaultValue = "1") Integer page,
        @Min(1) @Max(100) @Parameter(name = "limit", description = "�섏씠吏��� ��ぉ ��", in = ParameterIn.QUERY) @Valid @RequestParam(value = "limit", required = false, defaultValue = "20") Integer limit
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"unread_count\" : 0, \"pagination\" : { \"total\" : 1, \"limit\" : 6, \"page\" : 0, \"total_pages\" : 5 }, \"notifications\" : [ { \"is_read\" : true, \"user_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"created_at\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"title\" : \"title\", \"message\" : \"message\", \"type\" : \"info\" }, { \"is_read\" : true, \"user_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"created_at\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"title\" : \"title\", \"message\" : \"message\", \"type\" : \"info\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"details\" : \"{}\", \"error\" : \"error\", \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    public static final String PATH_NOTIFICATIONS_ID_READ_PATCH = "/notifications/{id}/read";
    /**
     * PATCH /notifications/{id}/read : �뚮┝ �쎌쓬 泥섎━
     * �뱀젙 �뚮┝�� �쎌쓬 泥섎━�⑸땲��
     *
     * @param id �뚮┝ ID (required)
     * @return �뚮┝ �쎌쓬 泥섎━ �깃났 (status code 200)
     *         or �섎せ�� �붿껌 (status code 400)
     *         or �뚮┝�� 李얠쓣 �� �놁쓬 (status code 404)
     */
    @Operation(
        operationId = "notificationsIdReadPatch",
        summary = "�뚮┝ �쎌쓬 泥섎━",
        description = "�뱀젙 �뚮┝�� �쎌쓬 泥섎━�⑸땲��",
        tags = { "Notification" },
        responses = {
            @ApiResponse(responseCode = "200", description = "�뚮┝ �쎌쓬 泥섎━ �깃났", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = NotificationsIdReadPatch200Response.class))
            }),
            @ApiResponse(responseCode = "400", description = "�섎せ�� �붿껌", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "�뚮┝�� 李얠쓣 �� �놁쓬", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth"),
            @SecurityRequirement(name = "BearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = NotificationsApi.PATH_NOTIFICATIONS_ID_READ_PATCH,
        produces = { "application/json" }
    )
    
    default ResponseEntity<NotificationsIdReadPatch200Response> notificationsIdReadPatch(
        @NotNull @Parameter(name = "id", description = "�뚮┝ ID", required = true, in = ParameterIn.PATH) @PathVariable("id") UUID id
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"notification\" : { \"is_read\" : true, \"user_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"created_at\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"title\" : \"title\", \"message\" : \"message\", \"type\" : \"info\" }, \"message\" : \"�뚮┝�� �쎌쓬 泥섎━�섏뿀�듬땲��\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"details\" : \"{}\", \"error\" : \"error\", \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"details\" : \"{}\", \"error\" : \"error\", \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
