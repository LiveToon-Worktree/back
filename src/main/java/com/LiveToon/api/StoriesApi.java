/*
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.16.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.LiveToon.api;

import com.LiveToon.model.Error;
import com.LiveToon.model.Scene;
import com.LiveToon.model.StoriesStoryIdGet200Response;
import com.LiveToon.model.StoriesStoryIdProgressPost200Response;
import com.LiveToon.model.StoriesStoryIdProgressPostRequest;
import com.LiveToon.model.StoriesStoryIdScenePost200Response;
import com.LiveToon.model.StoriesStoryIdScenePostRequest;
import java.util.UUID;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;

import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-09-29T19:10:41.347886+09:00[Asia/Seoul]", comments = "Generator version: 7.16.0")
@Validated
@Tag(name = "Story", description = "the Story API")
public interface StoriesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    public static final String PATH_STORIES_STORY_ID_GET = "/stories/{story_id}";
    /**
     * GET /stories/{story_id} : �ㅽ넗由� �꾩껜 議고쉶
     * �뱀젙 �ㅽ넗由ъ쓽 �꾩껜 �뺣낫�� �꾩옱 吏꾪뻾 �곹솴�� 議고쉶�⑸땲��
     *
     * @param storyId �ㅽ넗由� ID (required)
     * @param includeScenes �λ㈃ �뺣낫 �ы븿 �щ� (optional, default to false)
     * @return �ㅽ넗由� �뺣낫 議고쉶 �깃났 (status code 200)
     *         or �ㅽ넗由щ� 李얠쓣 �� �놁쓬 (status code 404)
     */
    @Operation(
        operationId = "storiesStoryIdGet",
        summary = "�ㅽ넗由� �꾩껜 議고쉶",
        description = "�뱀젙 �ㅽ넗由ъ쓽 �꾩껜 �뺣낫�� �꾩옱 吏꾪뻾 �곹솴�� 議고쉶�⑸땲��",
        tags = { "Story" },
        responses = {
            @ApiResponse(responseCode = "200", description = "�ㅽ넗由� �뺣낫 議고쉶 �깃났", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = StoriesStoryIdGet200Response.class))
            }),
            @ApiResponse(responseCode = "404", description = "�ㅽ넗由щ� 李얠쓣 �� �놁쓬", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth"),
            @SecurityRequirement(name = "BearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = StoriesApi.PATH_STORIES_STORY_ID_GET,
        produces = { "application/json" }
    )
    
    default ResponseEntity<StoriesStoryIdGet200Response> storiesStoryIdGet(
        @NotNull @Parameter(name = "story_id", description = "�ㅽ넗由� ID", required = true, in = ParameterIn.PATH) @PathVariable("story_id") UUID storyId,
        @Parameter(name = "include_scenes", description = "�λ㈃ �뺣낫 �ы븿 �щ�", in = ParameterIn.QUERY) @Valid @RequestParam(value = "include_scenes", required = false, defaultValue = "false") Boolean includeScenes
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"scenes\" : [ { \"is_final\" : true, \"image_url\" : \"https://openapi-generator.tech\", \"story_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"created_at\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"title\" : \"title\", \"choices\" : [ { \"next_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"consequence\" : \"consequence\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"text\" : \"text\" }, { \"next_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"consequence\" : \"consequence\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"text\" : \"text\" } ], \"content\" : \"content\" }, { \"is_final\" : true, \"image_url\" : \"https://openapi-generator.tech\", \"story_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"created_at\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"title\" : \"title\", \"choices\" : [ { \"next_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"consequence\" : \"consequence\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"text\" : \"text\" }, { \"next_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"consequence\" : \"consequence\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"text\" : \"text\" } ], \"content\" : \"content\" } ], \"current_scene\" : { \"is_final\" : true, \"image_url\" : \"https://openapi-generator.tech\", \"story_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"created_at\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"title\" : \"title\", \"choices\" : [ { \"next_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"consequence\" : \"consequence\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"text\" : \"text\" }, { \"next_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"consequence\" : \"consequence\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"text\" : \"text\" } ], \"content\" : \"content\" }, \"story\" : { \"world_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"updated_at\" : \"2000-01-23T04:56:07.000+00:00\", \"description\" : \"description\", \"created_at\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"title\" : \"title\", \"current_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"status\" : \"active\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"details\" : \"{}\", \"error\" : \"error\", \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    public static final String PATH_STORIES_STORY_ID_PROGRESS_POST = "/stories/{story_id}/progress";
    /**
     * POST /stories/{story_id}/progress : �좎� �ㅽ넗由� �좏깮吏� �낅젰 �� �ㅼ쓬 �ㅽ넗由�/�대�吏� �묐떟
     * �ъ슜�먯쓽 �좏깮�� �곕씪 �ㅼ쓬 �λ㈃�쇰줈 吏꾪뻾�⑸땲��
     *
     * @param storyId �ㅽ넗由� ID (required)
     * @param storiesStoryIdProgressPostRequest  (required)
     * @return �ㅼ쓬 �λ㈃�쇰줈 吏꾪뻾 �깃났 (status code 200)
     *         or �섎せ�� �붿껌 (status code 400)
     *         or �ㅽ넗由� �먮뒗 �좏깮吏�瑜� 李얠쓣 �� �놁쓬 (status code 404)
     */
    @Operation(
        operationId = "storiesStoryIdProgressPost",
        summary = "�좎� �ㅽ넗由� �좏깮吏� �낅젰 �� �ㅼ쓬 �ㅽ넗由�/�대�吏� �묐떟",
        description = "�ъ슜�먯쓽 �좏깮�� �곕씪 �ㅼ쓬 �λ㈃�쇰줈 吏꾪뻾�⑸땲��",
        tags = { "Story" },
        responses = {
            @ApiResponse(responseCode = "200", description = "�ㅼ쓬 �λ㈃�쇰줈 吏꾪뻾 �깃났", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = StoriesStoryIdProgressPost200Response.class))
            }),
            @ApiResponse(responseCode = "400", description = "�섎せ�� �붿껌", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "�ㅽ넗由� �먮뒗 �좏깮吏�瑜� 李얠쓣 �� �놁쓬", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth"),
            @SecurityRequirement(name = "BearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = StoriesApi.PATH_STORIES_STORY_ID_PROGRESS_POST,
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<StoriesStoryIdProgressPost200Response> storiesStoryIdProgressPost(
        @NotNull @Parameter(name = "story_id", description = "�ㅽ넗由� ID", required = true, in = ParameterIn.PATH) @PathVariable("story_id") UUID storyId,
        @Parameter(name = "StoriesStoryIdProgressPostRequest", description = "", required = true) @Valid @RequestBody StoriesStoryIdProgressPostRequest storiesStoryIdProgressPostRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"achievements\" : [ { \"name\" : \"name\", \"description\" : \"description\", \"progress\" : 8, \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"category\" : \"category\", \"unlocked_at\" : \"2000-01-23T04:56:07.000+00:00\", \"is_completed\" : true }, { \"name\" : \"name\", \"description\" : \"description\", \"progress\" : 8, \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"category\" : \"category\", \"unlocked_at\" : \"2000-01-23T04:56:07.000+00:00\", \"is_completed\" : true } ], \"story_status\" : \"active\", \"next_scene\" : { \"is_final\" : true, \"image_url\" : \"https://openapi-generator.tech\", \"story_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"created_at\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"title\" : \"title\", \"choices\" : [ { \"next_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"consequence\" : \"consequence\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"text\" : \"text\" }, { \"next_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"consequence\" : \"consequence\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"text\" : \"text\" } ], \"content\" : \"content\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"details\" : \"{}\", \"error\" : \"error\", \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"details\" : \"{}\", \"error\" : \"error\", \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    public static final String PATH_STORIES_STORY_ID_SCENE_POST = "/stories/{story_id}/scene";
    /**
     * POST /stories/{story_id}/scene : (�띿뒪�� + �대�吏�) �④퍡 諛섑솚
     * �ъ슜�� �낅젰�� 諛뷀깢�쇰줈 �덈줈�� �λ㈃�� �앹꽦�섍퀬 �띿뒪�몄� �대�吏�瑜� �④퍡 諛섑솚�⑸땲��
     *
     * @param storyId �ㅽ넗由� ID (required)
     * @param storiesStoryIdScenePostRequest  (required)
     * @return �λ㈃ �앹꽦 �깃났 (status code 200)
     *         or �섎せ�� �붿껌 (status code 400)
     *         or �ㅽ넗由щ� 李얠쓣 �� �놁쓬 (status code 404)
     */
    @Operation(
        operationId = "storiesStoryIdScenePost",
        summary = "(�띿뒪�� + �대�吏�) �④퍡 諛섑솚",
        description = "�ъ슜�� �낅젰�� 諛뷀깢�쇰줈 �덈줈�� �λ㈃�� �앹꽦�섍퀬 �띿뒪�몄� �대�吏�瑜� �④퍡 諛섑솚�⑸땲��",
        tags = { "Story" },
        responses = {
            @ApiResponse(responseCode = "200", description = "�λ㈃ �앹꽦 �깃났", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = StoriesStoryIdScenePost200Response.class))
            }),
            @ApiResponse(responseCode = "400", description = "�섎せ�� �붿껌", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            }),
            @ApiResponse(responseCode = "404", description = "�ㅽ넗由щ� 李얠쓣 �� �놁쓬", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth"),
            @SecurityRequirement(name = "BearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = StoriesApi.PATH_STORIES_STORY_ID_SCENE_POST,
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<StoriesStoryIdScenePost200Response> storiesStoryIdScenePost(
        @NotNull @Parameter(name = "story_id", description = "�ㅽ넗由� ID", required = true, in = ParameterIn.PATH) @PathVariable("story_id") UUID storyId,
        @Parameter(name = "StoriesStoryIdScenePostRequest", description = "", required = true) @Valid @RequestBody StoriesStoryIdScenePostRequest storiesStoryIdScenePostRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"prose\" : \"prose\", \"image_url\" : \"https://openapi-generator.tech\", \"choices\" : [ { \"next_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"consequence\" : \"consequence\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"text\" : \"text\" }, { \"next_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"consequence\" : \"consequence\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"text\" : \"text\" } ], \"scene\" : { \"is_final\" : true, \"image_url\" : \"https://openapi-generator.tech\", \"story_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"created_at\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"title\" : \"title\", \"choices\" : [ { \"next_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"consequence\" : \"consequence\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"text\" : \"text\" }, { \"next_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"consequence\" : \"consequence\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"text\" : \"text\" } ], \"content\" : \"content\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"details\" : \"{}\", \"error\" : \"error\", \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"details\" : \"{}\", \"error\" : \"error\", \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    public static final String PATH_STORIES_STORY_ID_SCENES_SCENE_ID_GET = "/stories/{story_id}/scenes/{scene_id}";
    /**
     * GET /stories/{story_id}/scenes/{scene_id} : �뱀젙 �λ㈃ 議고쉶
     * �ㅽ넗由ъ쓽 �뱀젙 �λ㈃ �뺣낫瑜� 議고쉶�⑸땲��
     *
     * @param storyId �ㅽ넗由� ID (required)
     * @param sceneId �λ㈃ ID (required)
     * @return �λ㈃ �뺣낫 議고쉶 �깃났 (status code 200)
     *         or �ㅽ넗由� �먮뒗 �λ㈃�� 李얠쓣 �� �놁쓬 (status code 404)
     */
    @Operation(
        operationId = "storiesStoryIdScenesSceneIdGet",
        summary = "�뱀젙 �λ㈃ 議고쉶",
        description = "�ㅽ넗由ъ쓽 �뱀젙 �λ㈃ �뺣낫瑜� 議고쉶�⑸땲��",
        tags = { "Story" },
        responses = {
            @ApiResponse(responseCode = "200", description = "�λ㈃ �뺣낫 議고쉶 �깃났", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Scene.class))
            }),
            @ApiResponse(responseCode = "404", description = "�ㅽ넗由� �먮뒗 �λ㈃�� 李얠쓣 �� �놁쓬", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Error.class))
            })
        },
        security = {
            @SecurityRequirement(name = "ApiKeyAuth"),
            @SecurityRequirement(name = "BearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = StoriesApi.PATH_STORIES_STORY_ID_SCENES_SCENE_ID_GET,
        produces = { "application/json" }
    )
    
    default ResponseEntity<Scene> storiesStoryIdScenesSceneIdGet(
        @NotNull @Parameter(name = "story_id", description = "�ㅽ넗由� ID", required = true, in = ParameterIn.PATH) @PathVariable("story_id") UUID storyId,
        @NotNull @Parameter(name = "scene_id", description = "�λ㈃ ID", required = true, in = ParameterIn.PATH) @PathVariable("scene_id") UUID sceneId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"is_final\" : true, \"image_url\" : \"https://openapi-generator.tech\", \"story_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"created_at\" : \"2000-01-23T04:56:07.000+00:00\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"title\" : \"title\", \"choices\" : [ { \"next_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"consequence\" : \"consequence\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"text\" : \"text\" }, { \"next_scene_id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"consequence\" : \"consequence\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"text\" : \"text\" } ], \"content\" : \"content\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"details\" : \"{}\", \"error\" : \"error\", \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
